ARM GAS  /tmp/ccbNVeb5.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  23              	MX_GPIO_Init:
  24              	.LFB43:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccbNVeb5.s 			page 2


  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c ****  UART_HandleTypeDef huart2;
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
  89:Core/Src/main.c ****   MX_USART2_UART_Init();
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
ARM GAS  /tmp/ccbNVeb5.s 			page 3


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     /* USER CODE END WHILE */
  99:Core/Src/main.c ****     HAL_Delay(500);
 100:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****   }
 103:Core/Src/main.c ****   /* USER CODE END 3 */
 104:Core/Src/main.c **** }
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** /**
 107:Core/Src/main.c ****   * @brief System Clock Configuration
 108:Core/Src/main.c ****   * @retval None
 109:Core/Src/main.c ****   */
 110:Core/Src/main.c **** void SystemClock_Config(void)
 111:Core/Src/main.c **** {
 112:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 113:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 114:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
ARM GAS  /tmp/ccbNVeb5.s 			page 4


 148:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 149:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 150:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 151:Core/Src/main.c ****   {
 152:Core/Src/main.c ****     Error_Handler();
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /**
 157:Core/Src/main.c ****   * @brief USART2 Initialization Function
 158:Core/Src/main.c ****   * @param None
 159:Core/Src/main.c ****   * @retval None
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 162:Core/Src/main.c **** {
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 171:Core/Src/main.c ****   huart2.Instance = USART2;
 172:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 173:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 174:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 175:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 176:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 177:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 178:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 179:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 180:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 181:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 182:Core/Src/main.c ****   {
 183:Core/Src/main.c ****     Error_Handler();
 184:Core/Src/main.c ****   }
 185:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c **** /**
 192:Core/Src/main.c ****   * @brief GPIO Initialization Function
 193:Core/Src/main.c ****   * @param None
 194:Core/Src/main.c ****   * @retval None
 195:Core/Src/main.c ****   */
 196:Core/Src/main.c **** static void MX_GPIO_Init(void)
 197:Core/Src/main.c **** {
  26              		.loc 1 197 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccbNVeb5.s 			page 5


  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 89B0     		sub	sp, sp, #36
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 198:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 198 3 view .LVU1
  40              		.loc 1 198 20 is_stmt 0 view .LVU2
  41 0004 1422     		movs	r2, #20
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 201:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 201 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 201 3 view .LVU4
  49              		.loc 1 201 3 view .LVU5
  50 000e 154B     		ldr	r3, .L2
  51 0010 D96A     		ldr	r1, [r3, #44]
  52 0012 0422     		movs	r2, #4
  53 0014 1143     		orrs	r1, r2
  54 0016 D962     		str	r1, [r3, #44]
  55              		.loc 1 201 3 view .LVU6
  56 0018 D96A     		ldr	r1, [r3, #44]
  57 001a 0A40     		ands	r2, r1
  58 001c 0092     		str	r2, [sp]
  59              		.loc 1 201 3 view .LVU7
  60 001e 009A     		ldr	r2, [sp]
  61              	.LBE4:
  62              		.loc 1 201 3 view .LVU8
 202:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 202 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 202 3 view .LVU10
  66              		.loc 1 202 3 view .LVU11
  67 0020 DA6A     		ldr	r2, [r3, #44]
  68 0022 0124     		movs	r4, #1
  69 0024 2243     		orrs	r2, r4
  70 0026 DA62     		str	r2, [r3, #44]
  71              		.loc 1 202 3 view .LVU12
  72 0028 DA6A     		ldr	r2, [r3, #44]
  73 002a 2240     		ands	r2, r4
  74 002c 0192     		str	r2, [sp, #4]
  75              		.loc 1 202 3 view .LVU13
  76 002e 019A     		ldr	r2, [sp, #4]
  77              	.LBE5:
  78              		.loc 1 202 3 view .LVU14
 203:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  79              		.loc 1 203 3 view .LVU15
  80              	.LBB6:
  81              		.loc 1 203 3 view .LVU16
  82              		.loc 1 203 3 view .LVU17
  83 0030 D96A     		ldr	r1, [r3, #44]
ARM GAS  /tmp/ccbNVeb5.s 			page 6


  84 0032 0222     		movs	r2, #2
  85 0034 1143     		orrs	r1, r2
  86 0036 D962     		str	r1, [r3, #44]
  87              		.loc 1 203 3 view .LVU18
  88 0038 DB6A     		ldr	r3, [r3, #44]
  89 003a 1A40     		ands	r2, r3
  90 003c 0292     		str	r2, [sp, #8]
  91              		.loc 1 203 3 view .LVU19
  92 003e 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 203 3 view .LVU20
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 206 3 view .LVU21
  96 0040 094D     		ldr	r5, .L2+4
  97 0042 0022     		movs	r2, #0
  98 0044 0821     		movs	r1, #8
  99 0046 2800     		movs	r0, r5
 100 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL1:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 209:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 209 3 view .LVU22
 103              		.loc 1 209 23 is_stmt 0 view .LVU23
 104 004c 0823     		movs	r3, #8
 105 004e 0393     		str	r3, [sp, #12]
 210:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 210 3 is_stmt 1 view .LVU24
 107              		.loc 1 210 24 is_stmt 0 view .LVU25
 108 0050 0494     		str	r4, [sp, #16]
 211:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 109              		.loc 1 211 3 is_stmt 1 view .LVU26
 110              		.loc 1 211 24 is_stmt 0 view .LVU27
 111 0052 0023     		movs	r3, #0
 112 0054 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 212 3 is_stmt 1 view .LVU28
 114              		.loc 1 212 25 is_stmt 0 view .LVU29
 115 0056 0693     		str	r3, [sp, #24]
 213:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 213 3 is_stmt 1 view .LVU30
 117 0058 03A9     		add	r1, sp, #12
 118 005a 2800     		movs	r0, r5
 119 005c FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL2:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** }
 121              		.loc 1 215 1 is_stmt 0 view .LVU31
 122 0060 09B0     		add	sp, sp, #36
 123              		@ sp needed
 124 0062 30BD     		pop	{r4, r5, pc}
 125              	.L3:
 126              		.align	2
 127              	.L2:
 128 0064 00100240 		.word	1073876992
ARM GAS  /tmp/ccbNVeb5.s 			page 7


 129 0068 00040050 		.word	1342178304
 130              		.cfi_endproc
 131              	.LFE43:
 133              		.section	.text.Error_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	Error_Handler
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 140              	Error_Handler:
 141              	.LFB44:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE END 4 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 223:Core/Src/main.c ****   * @retval None
 224:Core/Src/main.c ****   */
 225:Core/Src/main.c **** void Error_Handler(void)
 226:Core/Src/main.c **** {
 142              		.loc 1 226 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		@ Volatile: function does not return.
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 227:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 228:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 229:Core/Src/main.c ****   __disable_irq();
 148              		.loc 1 229 3 view .LVU33
 149              	.LBB7:
 150              	.LBI7:
 151              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccbNVeb5.s 			page 8


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccbNVeb5.s 			page 9


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  /tmp/ccbNVeb5.s 			page 10


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 152              		.loc 2 140 27 view .LVU34
 153              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 154              		.loc 2 142 3 view .LVU35
 155              		.syntax divided
 156              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 157 0000 72B6     		cpsid i
 158              	@ 0 "" 2
 159              		.thumb
 160              		.syntax unified
 161              	.L5:
 162              	.LBE8:
 163              	.LBE7:
 230:Core/Src/main.c ****   while (1)
 164              		.loc 1 230 3 discriminator 1 view .LVU36
 231:Core/Src/main.c ****   {
 232:Core/Src/main.c ****   }
 165              		.loc 1 232 3 discriminator 1 view .LVU37
 230:Core/Src/main.c ****   while (1)
 166              		.loc 1 230 9 discriminator 1 view .LVU38
 167 0002 FEE7     		b	.L5
 168              		.cfi_endproc
 169              	.LFE44:
 171              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 177              	MX_USART2_UART_Init:
 178              	.LFB42:
 162:Core/Src/main.c **** 
 179              		.loc 1 162 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 171:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 188              		.loc 1 171 3 view .LVU40
 171:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 189              		.loc 1 171 19 is_stmt 0 view .LVU41
 190 0002 0B48     		ldr	r0, .L9
 191 0004 0B4B     		ldr	r3, .L9+4
 192 0006 0360     		str	r3, [r0]
 172:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 193              		.loc 1 172 3 is_stmt 1 view .LVU42
 172:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 194              		.loc 1 172 24 is_stmt 0 view .LVU43
 195 0008 E123     		movs	r3, #225
ARM GAS  /tmp/ccbNVeb5.s 			page 11


 196 000a 5B02     		lsls	r3, r3, #9
 197 000c 4360     		str	r3, [r0, #4]
 173:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 198              		.loc 1 173 3 is_stmt 1 view .LVU44
 173:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 199              		.loc 1 173 26 is_stmt 0 view .LVU45
 200 000e 0023     		movs	r3, #0
 201 0010 8360     		str	r3, [r0, #8]
 174:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 202              		.loc 1 174 3 is_stmt 1 view .LVU46
 174:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 203              		.loc 1 174 24 is_stmt 0 view .LVU47
 204 0012 C360     		str	r3, [r0, #12]
 175:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 205              		.loc 1 175 3 is_stmt 1 view .LVU48
 175:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 206              		.loc 1 175 22 is_stmt 0 view .LVU49
 207 0014 0361     		str	r3, [r0, #16]
 176:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 208              		.loc 1 176 3 is_stmt 1 view .LVU50
 176:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 209              		.loc 1 176 20 is_stmt 0 view .LVU51
 210 0016 0C22     		movs	r2, #12
 211 0018 4261     		str	r2, [r0, #20]
 177:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 212              		.loc 1 177 3 is_stmt 1 view .LVU52
 177:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 213              		.loc 1 177 25 is_stmt 0 view .LVU53
 214 001a 8361     		str	r3, [r0, #24]
 178:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 215              		.loc 1 178 3 is_stmt 1 view .LVU54
 178:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 216              		.loc 1 178 28 is_stmt 0 view .LVU55
 217 001c C361     		str	r3, [r0, #28]
 179:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 218              		.loc 1 179 3 is_stmt 1 view .LVU56
 179:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 219              		.loc 1 179 30 is_stmt 0 view .LVU57
 220 001e 0362     		str	r3, [r0, #32]
 180:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 221              		.loc 1 180 3 is_stmt 1 view .LVU58
 180:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 222              		.loc 1 180 38 is_stmt 0 view .LVU59
 223 0020 4362     		str	r3, [r0, #36]
 181:Core/Src/main.c ****   {
 224              		.loc 1 181 3 is_stmt 1 view .LVU60
 181:Core/Src/main.c ****   {
 225              		.loc 1 181 7 is_stmt 0 view .LVU61
 226 0022 FFF7FEFF 		bl	HAL_UART_Init
 227              	.LVL3:
 181:Core/Src/main.c ****   {
 228              		.loc 1 181 6 view .LVU62
 229 0026 0028     		cmp	r0, #0
 230 0028 00D1     		bne	.L8
 189:Core/Src/main.c **** 
 231              		.loc 1 189 1 view .LVU63
 232              		@ sp needed
ARM GAS  /tmp/ccbNVeb5.s 			page 12


 233 002a 10BD     		pop	{r4, pc}
 234              	.L8:
 183:Core/Src/main.c ****   }
 235              		.loc 1 183 5 is_stmt 1 view .LVU64
 236 002c FFF7FEFF 		bl	Error_Handler
 237              	.LVL4:
 238              	.L10:
 239              		.align	2
 240              	.L9:
 241 0030 00000000 		.word	huart2
 242 0034 00440040 		.word	1073759232
 243              		.cfi_endproc
 244              	.LFE42:
 246              		.section	.text.SystemClock_Config,"ax",%progbits
 247              		.align	1
 248              		.global	SystemClock_Config
 249              		.syntax unified
 250              		.code	16
 251              		.thumb_func
 253              	SystemClock_Config:
 254              	.LFB41:
 111:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 255              		.loc 1 111 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 96
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 00B5     		push	{lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 14, -4
 263 0002 99B0     		sub	sp, sp, #100
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 104
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 266              		.loc 1 112 3 view .LVU66
 112:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 267              		.loc 1 112 22 is_stmt 0 view .LVU67
 268 0004 3422     		movs	r2, #52
 269 0006 0021     		movs	r1, #0
 270 0008 0BA8     		add	r0, sp, #44
 271 000a FFF7FEFF 		bl	memset
 272              	.LVL5:
 113:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 273              		.loc 1 113 3 is_stmt 1 view .LVU68
 113:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 274              		.loc 1 113 22 is_stmt 0 view .LVU69
 275 000e 1422     		movs	r2, #20
 276 0010 0021     		movs	r1, #0
 277 0012 06A8     		add	r0, sp, #24
 278 0014 FFF7FEFF 		bl	memset
 279              	.LVL6:
 114:Core/Src/main.c **** 
 280              		.loc 1 114 3 is_stmt 1 view .LVU70
 114:Core/Src/main.c **** 
 281              		.loc 1 114 28 is_stmt 0 view .LVU71
 282 0018 1822     		movs	r2, #24
 283 001a 0021     		movs	r1, #0
ARM GAS  /tmp/ccbNVeb5.s 			page 13


 284 001c 6846     		mov	r0, sp
 285 001e FFF7FEFF 		bl	memset
 286              	.LVL7:
 118:Core/Src/main.c **** 
 287              		.loc 1 118 3 is_stmt 1 view .LVU72
 288 0022 1D49     		ldr	r1, .L18
 289 0024 0B68     		ldr	r3, [r1]
 290 0026 1D4A     		ldr	r2, .L18+4
 291 0028 1A40     		ands	r2, r3
 292 002a 8023     		movs	r3, #128
 293 002c 1B01     		lsls	r3, r3, #4
 294 002e 1343     		orrs	r3, r2
 295 0030 0B60     		str	r3, [r1]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 296              		.loc 1 123 3 view .LVU73
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 297              		.loc 1 123 36 is_stmt 0 view .LVU74
 298 0032 0223     		movs	r3, #2
 299 0034 0B93     		str	r3, [sp, #44]
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 300              		.loc 1 124 3 is_stmt 1 view .LVU75
 124:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 301              		.loc 1 124 30 is_stmt 0 view .LVU76
 302 0036 0122     		movs	r2, #1
 303 0038 0E92     		str	r2, [sp, #56]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 304              		.loc 1 125 3 is_stmt 1 view .LVU77
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 305              		.loc 1 125 41 is_stmt 0 view .LVU78
 306 003a 0F32     		adds	r2, r2, #15
 307 003c 0F92     		str	r2, [sp, #60]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 308              		.loc 1 126 3 is_stmt 1 view .LVU79
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 309              		.loc 1 126 34 is_stmt 0 view .LVU80
 310 003e 1493     		str	r3, [sp, #80]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 311              		.loc 1 127 3 is_stmt 1 view .LVU81
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 312              		.loc 1 127 35 is_stmt 0 view .LVU82
 313 0040 0023     		movs	r3, #0
 314 0042 1593     		str	r3, [sp, #84]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 315              		.loc 1 128 3 is_stmt 1 view .LVU83
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 316              		.loc 1 128 32 is_stmt 0 view .LVU84
 317 0044 8023     		movs	r3, #128
 318 0046 DB02     		lsls	r3, r3, #11
 319 0048 1693     		str	r3, [sp, #88]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 320              		.loc 1 129 3 is_stmt 1 view .LVU85
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 321              		.loc 1 129 32 is_stmt 0 view .LVU86
 322 004a 8023     		movs	r3, #128
 323 004c DB03     		lsls	r3, r3, #15
 324 004e 1793     		str	r3, [sp, #92]
 130:Core/Src/main.c ****   {
ARM GAS  /tmp/ccbNVeb5.s 			page 14


 325              		.loc 1 130 3 is_stmt 1 view .LVU87
 130:Core/Src/main.c ****   {
 326              		.loc 1 130 7 is_stmt 0 view .LVU88
 327 0050 0BA8     		add	r0, sp, #44
 328 0052 FFF7FEFF 		bl	HAL_RCC_OscConfig
 329              	.LVL8:
 130:Core/Src/main.c ****   {
 330              		.loc 1 130 6 view .LVU89
 331 0056 0028     		cmp	r0, #0
 332 0058 18D1     		bne	.L15
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 333              		.loc 1 137 3 is_stmt 1 view .LVU90
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 334              		.loc 1 137 31 is_stmt 0 view .LVU91
 335 005a 0F23     		movs	r3, #15
 336 005c 0693     		str	r3, [sp, #24]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 337              		.loc 1 139 3 is_stmt 1 view .LVU92
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 338              		.loc 1 139 34 is_stmt 0 view .LVU93
 339 005e 0C3B     		subs	r3, r3, #12
 340 0060 0793     		str	r3, [sp, #28]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 341              		.loc 1 140 3 is_stmt 1 view .LVU94
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 342              		.loc 1 140 35 is_stmt 0 view .LVU95
 343 0062 0023     		movs	r3, #0
 344 0064 0893     		str	r3, [sp, #32]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 345              		.loc 1 141 3 is_stmt 1 view .LVU96
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 346              		.loc 1 141 36 is_stmt 0 view .LVU97
 347 0066 0993     		str	r3, [sp, #36]
 142:Core/Src/main.c **** 
 348              		.loc 1 142 3 is_stmt 1 view .LVU98
 142:Core/Src/main.c **** 
 349              		.loc 1 142 36 is_stmt 0 view .LVU99
 350 0068 0A93     		str	r3, [sp, #40]
 144:Core/Src/main.c ****   {
 351              		.loc 1 144 3 is_stmt 1 view .LVU100
 144:Core/Src/main.c ****   {
 352              		.loc 1 144 7 is_stmt 0 view .LVU101
 353 006a 0121     		movs	r1, #1
 354 006c 06A8     		add	r0, sp, #24
 355 006e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 356              	.LVL9:
 144:Core/Src/main.c ****   {
 357              		.loc 1 144 6 view .LVU102
 358 0072 0028     		cmp	r0, #0
 359 0074 0CD1     		bne	.L16
 148:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 360              		.loc 1 148 3 is_stmt 1 view .LVU103
 148:Core/Src/main.c ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 361              		.loc 1 148 38 is_stmt 0 view .LVU104
 362 0076 0223     		movs	r3, #2
 363 0078 0093     		str	r3, [sp]
 149:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
ARM GAS  /tmp/ccbNVeb5.s 			page 15


 364              		.loc 1 149 3 is_stmt 1 view .LVU105
 149:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 365              		.loc 1 149 38 is_stmt 0 view .LVU106
 366 007a 0023     		movs	r3, #0
 367 007c 0293     		str	r3, [sp, #8]
 150:Core/Src/main.c ****   {
 368              		.loc 1 150 3 is_stmt 1 view .LVU107
 150:Core/Src/main.c ****   {
 369              		.loc 1 150 7 is_stmt 0 view .LVU108
 370 007e 6846     		mov	r0, sp
 371 0080 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 372              	.LVL10:
 150:Core/Src/main.c ****   {
 373              		.loc 1 150 6 view .LVU109
 374 0084 0028     		cmp	r0, #0
 375 0086 05D1     		bne	.L17
 154:Core/Src/main.c **** 
 376              		.loc 1 154 1 view .LVU110
 377 0088 19B0     		add	sp, sp, #100
 378              		@ sp needed
 379 008a 00BD     		pop	{pc}
 380              	.L15:
 132:Core/Src/main.c ****   }
 381              		.loc 1 132 5 is_stmt 1 view .LVU111
 382 008c FFF7FEFF 		bl	Error_Handler
 383              	.LVL11:
 384              	.L16:
 146:Core/Src/main.c ****   }
 385              		.loc 1 146 5 view .LVU112
 386 0090 FFF7FEFF 		bl	Error_Handler
 387              	.LVL12:
 388              	.L17:
 152:Core/Src/main.c ****   }
 389              		.loc 1 152 5 view .LVU113
 390 0094 FFF7FEFF 		bl	Error_Handler
 391              	.LVL13:
 392              	.L19:
 393              		.align	2
 394              	.L18:
 395 0098 00700040 		.word	1073770496
 396 009c FFE7FFFF 		.word	-6145
 397              		.cfi_endproc
 398              	.LFE41:
 400              		.section	.text.main,"ax",%progbits
 401              		.align	1
 402              		.global	main
 403              		.syntax unified
 404              		.code	16
 405              		.thumb_func
 407              	main:
 408              	.LFB40:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 409              		.loc 1 66 1 view -0
 410              		.cfi_startproc
 411              		@ Volatile: function does not return.
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccbNVeb5.s 			page 16


 414 0000 10B5     		push	{r4, lr}
 415              	.LCFI5:
 416              		.cfi_def_cfa_offset 8
 417              		.cfi_offset 4, -8
 418              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 419              		.loc 1 74 3 view .LVU115
 420 0002 FFF7FEFF 		bl	HAL_Init
 421              	.LVL14:
  81:Core/Src/main.c **** 
 422              		.loc 1 81 3 view .LVU116
 423 0006 FFF7FEFF 		bl	SystemClock_Config
 424              	.LVL15:
  88:Core/Src/main.c ****   MX_USART2_UART_Init();
 425              		.loc 1 88 3 view .LVU117
 426 000a FFF7FEFF 		bl	MX_GPIO_Init
 427              	.LVL16:
  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 428              		.loc 1 89 3 view .LVU118
 429 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 430              	.LVL17:
 431              	.L21:
  96:Core/Src/main.c ****   {
 432              		.loc 1 96 3 discriminator 1 view .LVU119
  99:Core/Src/main.c ****     HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
 433              		.loc 1 99 5 discriminator 1 view .LVU120
 434 0012 FA20     		movs	r0, #250
 435 0014 4000     		lsls	r0, r0, #1
 436 0016 FFF7FEFF 		bl	HAL_Delay
 437              	.LVL18:
 100:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 438              		.loc 1 100 5 discriminator 1 view .LVU121
 439 001a 0821     		movs	r1, #8
 440 001c 0148     		ldr	r0, .L22
 441 001e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 442              	.LVL19:
  96:Core/Src/main.c ****   {
 443              		.loc 1 96 9 discriminator 1 view .LVU122
 444 0022 F6E7     		b	.L21
 445              	.L23:
 446              		.align	2
 447              	.L22:
 448 0024 00040050 		.word	1342178304
 449              		.cfi_endproc
 450              	.LFE40:
 452              		.global	huart2
 453              		.section	.bss.huart2,"aw",%nobits
 454              		.align	2
 457              	huart2:
 458 0000 00000000 		.space	132
 458      00000000 
 458      00000000 
 458      00000000 
 458      00000000 
 459              		.text
 460              	.Letext0:
 461              		.file 3 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccbNVeb5.s 			page 17


 462              		.file 4 "/usr/share/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 463              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 464              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 465              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 466              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc_ex.h"
 467              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_gpio.h"
 468              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 469              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 470              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 471              		.file 13 "<built-in>"
ARM GAS  /tmp/ccbNVeb5.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccbNVeb5.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccbNVeb5.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccbNVeb5.s:128    .text.MX_GPIO_Init:0000000000000064 $d
     /tmp/ccbNVeb5.s:134    .text.Error_Handler:0000000000000000 $t
     /tmp/ccbNVeb5.s:140    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccbNVeb5.s:172    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccbNVeb5.s:177    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccbNVeb5.s:241    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccbNVeb5.s:457    .bss.huart2:0000000000000000 huart2
     /tmp/ccbNVeb5.s:247    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccbNVeb5.s:253    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccbNVeb5.s:395    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccbNVeb5.s:401    .text.main:0000000000000000 $t
     /tmp/ccbNVeb5.s:407    .text.main:0000000000000000 main
     /tmp/ccbNVeb5.s:448    .text.main:0000000000000024 $d
     /tmp/ccbNVeb5.s:454    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_Delay
HAL_GPIO_TogglePin
